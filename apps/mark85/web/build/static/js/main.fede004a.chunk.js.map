{"version":3,"sources":["assets/logo.svg","assets/avatar.svg","styles/global.ts","services/api.ts","hooks/auth.tsx","routes/Route.tsx","components/Notice/styles.ts","components/Notice/index.tsx","utils/getValidationErrors.ts","components/Tooltip/styles.ts","components/Tooltip/index.tsx","components/Input/styles.ts","components/Input/index.tsx","components/Spinner/styles.ts","components/Spinner/index.tsx","components/Button/styles.ts","components/Button/index.tsx","pages/SignIn/styles.ts","pages/SignIn/index.tsx","pages/SignUp/styles.ts","pages/SignUp/index.tsx","pages/Tasks/styles.ts","pages/Tasks/index.tsx","pages/Create/styles.ts","pages/Create/index.tsx","routes/index.tsx","hooks/index.tsx","App.tsx","index.tsx"],"names":["module","exports","createGlobalStyle","api","axios","create","baseURL","AuthContext","createContext","AuthProvider","children","useState","token","localStorage","getItem","user","defaults","headers","authorization","JSON","parse","data","setData","signIn","useCallback","a","email","password","post","response","setItem","stringify","signOut","removeItem","updateUser","Provider","value","useAuth","useContext","Route","isPrivate","Component","component","rest","render","location","to","pathname","state","form","Container","styled","div","Notice","display","message","type","className","getVaidationErrors","err","validationErrors","inner","forEach","error","path","Tooltip","title","props","isErrored","css","isFocused","isField","Input","name","containerStyle","Icon","icon","inputRef","useRef","setIsFocused","setIsField","useField","fieldName","defaultValue","registerField","handleInputFocus","handleInputBlur","current","useEffect","ref","style","data-testid","size","onFocus","onBlur","SpinnerContainer","i","skbounce","keyframes","Bouce1","Bouce2","Spinner","button","shade","Button","loading","Content","AnimationContainer","Background","SignIn","formRef","setLoading","history","useHistory","notice","setNotice","handleSubmit","setErrors","schema","Yup","shape","required","validate","abortEarly","push","errors","getValidationErrors","src","logo","alt","onSubmit","FiMail","placeholder","FiLock","SignUp","min","then","catch","FiUser","Header","header","HeaderContent","main","TaskList","Section","section","Task","Tasks","tasks","setTasks","getTasks","get","split","onClick","color","length","map","task","key","_id","is_done","put","handleSelectTask","tags","tag","task_id","delete","AvatarInput","Create","setTag","formData","avatar","onChange","placeHolder","Routes","exact","AppProvider","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fede004a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.fc82b1a9.svg\";","module.exports = __webpack_public_path__ + \"static/media/avatar.6274be57.svg\";","import { createGlobalStyle } from \"styled-components\";\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box\n  }\n\n  *:focus {\n    outline: 0;\n  }\n\n  html, body, #root {\n    height: 100%;\n  }\n\n  body {\n    background-color: #121214;\n    color: #fff;\n    -webkit-font-smoothing: antialiased;\n  }\n\n  body, input, button {\n    font-family: \"Roboto Slab\", serif;\n    font-size: 16px;\n  }\n\n  .form-input {\n    margin-top: 8px;\n    width: 100%;\n  }\n\n  .alert {\n    text-align: left;\n    margin: 0px 0px 10px 10px !important;\n  }\n\n  .alert-error {\n    color: #c53030 !important;\n  }\n\n  h1, h2, h3, h4, h5, h6, strong {\n    font-weight: 500;\n  }\n\n  button {\n    cursor: pointer;\n  }\n\n  a {\n    text-decoration: none;\n  }\n\n  ul {\n    list-style: none;\n  }\n`;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"http://localhost:3333\",\n});\n\nexport default api;\n","import React, { createContext, useCallback, useState, useContext } from \"react\";\n\nimport api from \"../services/api\";\n\ninterface User {\n  id: string;\n  avatar_url: string;\n  name: string;\n  email: string;\n}\n\ninterface SignInCredencials {\n  email: string;\n  password: string;\n}\n\ninterface AuthState {\n  user: User;\n  token: string;\n}\n\ninterface AuthContextData {\n  user: User;\n  signIn(credencials: SignInCredencials): Promise<void>;\n  signOut(): void;\n  updateUser(user: User): void;\n}\n\nconst AuthContext = createContext<AuthContextData>({} as AuthContextData);\n\nexport const AuthProvider: React.FC = ({ children }) => {\n  const [data, setData] = useState<AuthState>(() => {\n    const token = localStorage.getItem(\"@Mark85:token\");\n    const user = localStorage.getItem(\"@Mark85:user\");\n\n    if (token && user) {\n      api.defaults.headers.authorization = `${token}`;\n\n      return { token, user: JSON.parse(user) };\n    }\n\n    return {} as AuthState;\n  });\n\n  const signIn = useCallback(async ({ email, password }) => {\n    const response = await api.post(\"sessions\", {\n      email,\n      password,\n    });\n\n    const { user, token } = response.data;\n\n    localStorage.setItem(\"@Mark85:token\", token);\n    localStorage.setItem(\"@Mark85:user\", JSON.stringify(user));\n\n    api.defaults.headers.authorization = `${token}`;\n\n    setData({\n      user,\n      token,\n    });\n  }, []);\n\n  const signOut = useCallback(() => {\n    localStorage.removeItem(\"@Mark85:token\");\n    localStorage.removeItem(\"@Mark85:user\");\n\n    setData({} as AuthState);\n  }, []);\n\n  const updateUser = useCallback(\n    (user: User) => {\n      localStorage.setItem(\"@Mark85:user\", JSON.stringify(user));\n\n      setData({\n        token: data.token,\n        user,\n      });\n    },\n    [setData, data.token],\n  );\n\n  return (\n    <AuthContext.Provider\n      value={{ user: data.user, signIn, signOut, updateUser }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport function useAuth(): AuthContextData {\n  const context = useContext(AuthContext);\n\n  return context;\n}\n","import React from \"react\";\nimport {\n  RouteProps as ReactDOMRouteProps,\n  Route as ReactDOMRoute,\n  Redirect,\n} from \"react-router-dom\";\n\nimport { useAuth } from \"../hooks/auth\";\n\ninterface RouteProps extends ReactDOMRouteProps {\n  isPrivate?: boolean;\n  component: React.ComponentType;\n}\n\nconst Route: React.FC<RouteProps> = ({\n  isPrivate = false,\n  component: Component,\n  ...rest\n}) => {\n  const { user } = useAuth();\n\n  return (\n    <ReactDOMRoute\n      {...rest}\n      render={({ location }) => {\n        return isPrivate === !!user ? (\n          <Component />\n        ) : (\n          <Redirect\n            to={{\n              pathname: isPrivate ? \"/\" : \"/tasks\",\n              state: { form: location },\n            }}\n          />\n        );\n      }}\n    />\n  );\n};\n\nexport default Route;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n\n  .notice {\n    text-align: left;\n    margin-bottom: 1rem;\n    align-items: center;\n    display: flex;\n    width: 100%;\n    padding: 1rem;\n    border-radius: 10px;\n\n    svg {\n      margin-right: 0.5rem;\n      font-size: 4rem;\n    }\n  }\n\n  .info {\n    background: #ebf8ff;\n    color: #3172b7;\n  }\n\n  .error {\n    background: #fddede;\n    color: #c53030;\n  }\n\n  .success {\n    background: #e6fffa;\n    color: #2e656a;\n  }\n\n`;","\n\nimport React from 'react';\nimport { FiAlertCircle } from 'react-icons/fi';\n\nimport { Container } from './styles';\n\nexport interface NoticeProps {\n  display: boolean;\n  message?: string;\n  type?: 'success' | 'error' | 'info';\n}\n\nconst Notice: React.FC<NoticeProps> = ({ children, display, message, type, ...rest }) => {\n  return (\n    <div>\n      {display &&\n        <Container className=\"notice-container\">\n          <div className={`notice ${type}`}>\n            <FiAlertCircle /> <p>{message}</p>\n          </div>\n        </Container>\n      }\n    </div>\n  );\n};\n\nexport default Notice;\n","import { ValidationError } from \"yup\";\n\ninterface Errors {\n  [key: string]: string;\n}\n\nexport default function getVaidationErrors(err: ValidationError): Errors {\n  const validationErrors: Errors = {};\n\n  err.inner.forEach((error) => {\n    validationErrors[error.path] = error.message;\n  });\n\n  return validationErrors;\n}\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  position: relative;\n\n  span {\n    width: 160px;\n    background: #404596;\n    color: #121214;\n    padding: 8px;\n    border-radius: 4px;\n    font-size: 14px;\n    font-weight: 500;\n    visibility: hidden;\n    text-align: center;\n    opacity: 0;\n    transition: opacity 0.4s;\n\n    position: absolute;\n    bottom: calc(100% + 12px);\n    left: 50%;\n    transform: translateX(-50%);\n\n    &::before {\n      content: \"\";\n      position: absolute;\n      top: 100%;\n      left: 50%;\n      transform: translateX(-50%);\n      border-style: solid;\n      border-color: #404596 transparent;\n      border-width: 6px 6px 0 6px;\n    }\n  }\n\n  &:hover span {\n    opacity: 1;\n    visibility: visible;\n  }\n`;\n","import React from \"react\";\n\nimport { Container } from \"./styles\";\n\ninterface TooltipProps {\n  title: string;\n  className?: string;\n}\n\nconst Tooltip: React.FC<TooltipProps> = ({ title, className, children }) => {\n  return (\n    <Container className={className}>\n      {children}\n      <span>{title}</span>\n    </Container>\n  );\n};\n\nexport default Tooltip;\n","import styled, { css } from 'styled-components';\r\n\r\nimport Tooltip from '../Tooltip';\r\n\r\ninterface ContainerProps {\r\n  isFocused: boolean;\r\n  isField: boolean;\r\n  isErrored: boolean;\r\n}\r\n\r\nexport const Container = styled.div<ContainerProps>`\r\n  background: #1e1c23;\r\n  border-radius: 10px;\r\n  padding: 16px;\r\n  width: 100%;\r\n\r\n  border: 2px solid #25242f;\r\n  color: #666360;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  & + .disabled {\r\n    background: #000;\r\n  }\r\n\r\n  & + div {\r\n    margin-top: 8px;\r\n  }\r\n\r\n  ${props =>\r\n    props.isErrored &&\r\n    css`\r\n      border-color: #c53030;\r\n    `}\r\n\r\n  ${props =>\r\n    props.isFocused &&\r\n    css`\r\n      color: #404596;\r\n      border-color: #404596;\r\n    `}\r\n\r\n  ${props =>\r\n    props.isField &&\r\n    css`\r\n      color: #404596;\r\n    `}\r\n\r\n  input {\r\n    flex: 1;\r\n    background: transparent;\r\n    border: 0;\r\n    color: #f4ede8;\r\n\r\n    &::placeholder {\r\n      color: #666360;\r\n    }\r\n  }\r\n\r\n  input[disabled] {\r\n    color: #666360;\r\n  }\r\n\r\n  svg {\r\n    margin-right: 16px;\r\n  }\r\n`;\r\n\r\nexport const Error = styled(Tooltip)`\r\n  height: 20px;\r\n  margin-left: 16px;\r\n  svg {\r\n    margin: 0;\r\n  }\r\n\r\n  span {\r\n    background: #c53030;\r\n    color: #f4ede8;\r\n\r\n    &::before {\r\n      border-color: #c53030 transparent;\r\n    }\r\n  }\r\n`;\r\n","import React, {\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n  useCallback,\r\n  InputHTMLAttributes,\r\n} from 'react';\r\nimport { IconBaseProps } from 'react-icons';\r\nimport { useField } from '@unform/core';\r\n\r\nimport { Container } from './styles';\r\n\r\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\r\n  name: string;\r\n  containerStyle?: React.CSSProperties;\r\n  icon?: React.ComponentType<IconBaseProps>;\r\n}\r\n\r\nconst Input: React.FC<InputProps> = ({\r\n  name,\r\n  containerStyle = {},\r\n  icon: Icon,\r\n  ...rest\r\n}) => {\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n  const [isFocused, setIsFocused] = useState(false);\r\n  const [isField, setIsField] = useState(false);\r\n  const { fieldName, defaultValue, error, registerField } = useField(name);\r\n\r\n  const handleInputFocus = useCallback(() => {\r\n    setIsFocused(true);\r\n  }, []);\r\n\r\n  const handleInputBlur = useCallback(() => {\r\n    setIsFocused(false);\r\n\r\n    setIsField(!!inputRef.current?.value);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    registerField({\r\n      name: fieldName,\r\n      ref: inputRef.current,\r\n      path: 'value',\r\n    });\r\n  }, [fieldName, registerField]);\r\n\r\n  return (\r\n    <div className=\"form-input\">\r\n      <Container\r\n        style={containerStyle}\r\n        isErrored={!!error}\r\n        isField={isField}\r\n        isFocused={isFocused}\r\n        data-testid=\"input-container\"\r\n      >\r\n        {Icon && <Icon size={20} />}\r\n        <input\r\n          onFocus={handleInputFocus}\r\n          onBlur={handleInputBlur}\r\n          defaultValue={defaultValue}\r\n          name={fieldName}\r\n          ref={inputRef}\r\n          {...rest}\r\n        />\r\n\r\n      </Container>\r\n\r\n      {error && (\r\n        <div className=\"alert\">\r\n          <small className=\"alert-error\">{error}</small>\r\n        </div>\r\n      )}\r\n\r\n\r\n    </div>\r\n\r\n  );\r\n};\r\nexport default Input;\r\n","import styled, { keyframes, css } from \"styled-components\";\n\nexport const SpinnerContainer = styled.i`\n  width: 25px;\n  height: 25px;\n  display: block;\n  position: relative;\n  margin: 0 auto;\n`;\n\nconst skbounce = keyframes`\n  0%, 100% { -webkit-transform: scale(0.0) }\n  50% { -webkit-transform: scale(1.0) }\n`;\n\nexport const Bouce1 = styled.i`\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  background-color: rgba(255, 255, 255, 0.9);\n  opacity: 0.6;\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  ${css`\n    animation: ${skbounce} 2s infinite ease-in-out;\n  `}\n`;\n\nexport const Bouce2 = styled.i`\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  background-color: rgba(255, 255, 255, 0.9);\n  opacity: 0.6;\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  ${css`\n    animation: ${skbounce} 2s infinite ease-in-out;\n    animation-delay: -1s;\n  `}\n`;\n","import React from \"react\";\n\nimport { SpinnerContainer, Bouce1, Bouce2 } from \"./styles\";\n\nconst Spinner: React.FC = () => {\n  return (\n    <SpinnerContainer>\n      <Bouce1 />\n      <Bouce2 />\n    </SpinnerContainer>\n  );\n};\n\nexport default Spinner;\n","import styled from \"styled-components\";\nimport { shade } from \"polished\";\n\nexport const Container = styled.button`\n  background: #404596;\n  color: #ccc;\n  font-weight: 500;\n  margin-top: 16px;\n  border-radius: 10px;\n  border: 0;\n  padding: 0 16px;\n  height: 56px;\n  width: 100%;\n  transition: background 0.2s;\n\n  &:hover {\n    background: ${shade(0.2, \"#404596\")};\n  }\n`;\n","import React, { ButtonHTMLAttributes } from \"react\";\n\nimport Spinner from \"../Spinner\";\n\nimport { Container } from \"./styles\";\n\ninterface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n  loading?: boolean;\n}\n\nconst Button: React.FC<ButtonProps> = ({ loading, children, ...rest }) => {\n  return (\n    <Container type=\"button\" {...rest}>\n      {loading ? <Spinner /> : children}\n    </Container>\n  );\n};\n\nexport default Button;\n","import styled from \"styled-components\";\nimport { shade } from \"polished\";\n\nexport const Container = styled.div`\n  height: 100vh;\n\n  display: flex;\n  align-items: stretch;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\n\nexport const AnimationContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  form {\n    margin: 80px 0;\n    width: 340px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    h1 {\n      margin-bottom: 24px;\n    }\n\n    a {\n      color: #f4ede8;\n      margin-top: 24px;\n      transition: color 0.2s;\n\n      &:hover {\n        color: ${shade(0.2, \"#f4ede8\")};\n      }\n    }\n  }\n\n  > a {\n    color: #404596;\n    display: flex;\n    align-items: center;\n    transition: color 0.2s;\n\n    &:hover {\n      color: ${shade(0.2, \"#404596\")};\n    }\n\n    svg {\n      margin-right: 8px;\n    }\n  }\n`;\n\nexport const Background = styled.div`\n  flex: 1;\n  background-size: cover;\n`;\n","import React, { useRef, useState, useCallback } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { FiLogIn, FiMail, FiLock } from \"react-icons/fi\";\nimport { Form } from \"@unform/web\";\nimport { FormHandles } from \"@unform/core\";\nimport * as Yup from \"yup\";\n\nimport { useAuth } from \"../../hooks/auth\";\nimport Notice, { NoticeProps } from '../../components/Notice';\n \nimport getValidationErrors from \"../../utils/getValidationErrors\";\n\nimport logo from \"../../assets/logo.svg\";\n\nimport Input from \"../../components/Input\";\nimport Button from \"../../components/Button\";\n\nimport { Container, Content, AnimationContainer, Background } from \"./styles\";\n\ninterface SignInFormData {\n  email: string;\n  password: string;\n}\n\nconst SignIn: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n\n  const [loading, setLoading] = useState(false);\n\n  const { signIn } = useAuth();\n\n  const history = useHistory();\n\n  const [notice, setNotice] = useState<NoticeProps>({\n    display: false\n  });\n\n  const handleSubmit = useCallback(\n    async (data: SignInFormData) => {\n      try {\n        formRef.current?.setErrors({});\n\n        const schema = Yup.object().shape({\n          email: Yup.string()\n            .email(\"Digite um e-mail válido\")\n            .required(\"Informe seu e-mail\"),\n          password: Yup.string().required(\"Informe sua senha\"),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        setLoading(true);\n\n        await signIn({\n          email: data.email,\n          password: data.password,\n        });\n\n        setLoading(false);\n\n        history.push(\"/tasks\");\n      } catch (err) {\n        setLoading(false);\n\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n\n          formRef.current?.setErrors(errors);\n\n          return;\n        }\n\n        setNotice({\n          display: true,\n          type: 'error',\n          message: 'Ocorreu um erro ao fazer login, verifique suas credenciais.'\n        })\n      }\n    },\n    [signIn, history],\n  );\n\n  return (\n    <Container>\n      <Content>\n        <AnimationContainer>\n          <img src={logo} alt=\"Mark85\" />\n\n          <Form ref={formRef} onSubmit={handleSubmit}>\n            <h1>Faça seu login</h1>\n\n            <Notice display={notice.display} message={notice.message} type={notice.type} />\n\n            <Input\n              name=\"email\"\n              icon={FiMail}\n              type=\"text\"\n              placeholder=\"E-mail\"\n            />\n            <Input\n              name=\"password\"\n              icon={FiLock}\n              type=\"password\"\n              placeholder=\"Senha\"\n            />\n\n            <Button loading={loading} type=\"submit\">\n              Entrar\n            </Button>\n\n            \n          </Form>\n\n          <Link to=\"signup\">\n            <FiLogIn />\n            Criar conta\n          </Link>\n        </AnimationContainer>\n      </Content>\n\n      <Background />\n    </Container>\n  );\n};\n\nexport default SignIn;\n","import styled from \"styled-components\";\nimport { shade } from \"polished\";\n\nexport const Container = styled.div`\n  height: 100vh;\n\n  display: flex;\n  align-items: stretch;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  justify-content: center;\n\n  width: 100%;\n`;\n\nexport const AnimationContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  form {\n    margin: 80px 0;\n    width: 340px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    h1 {\n      margin-bottom: 24px;\n    }\n\n    a {\n      color: #f4ede8;\n      margin-top: 24px;\n      transition: color 0.2s;\n\n      &:hover {\n        color: ${shade(0.2, \"#f4ede8\")};\n      }\n    }\n  }\n\n  > a {\n    color: #f4ede8;\n    display: flex;\n    align-items: center;\n    transition: color 0.2s;\n\n    &:hover {\n      color: ${shade(0.2, \"#f4ede8\")};\n    }\n\n    svg {\n      margin-right: 8px;\n    }\n  }\n`;\n\nexport const Background = styled.div`\n  flex: 1;\n  background-size: cover;\n`;\n","import React, { useCallback, useRef, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FiArrowLeft, FiUser, FiMail, FiLock } from \"react-icons/fi\";\nimport { Form } from \"@unform/web\";\nimport { FormHandles } from \"@unform/core\";\nimport * as Yup from \"yup\";\n\nimport api from \"../../services/api\";\n\nimport Notice, { NoticeProps } from '../../components/Notice';\n\nimport getValidationErrors from \"../../utils/getValidationErrors\";\n\nimport logo from \"../../assets/logo.svg\";\n\nimport Input from \"../../components/Input\";\nimport Button from \"../../components/Button\";\n\nimport { Container, Content, AnimationContainer, Background } from \"./styles\";\n\ninterface SignUpFormData {\n  name: string;\n  email: string;\n  password: string;\n}\n\nconst SignUp: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n\n  const [loading, setLoading] = useState(false);\n\n  const [notice, setNotice] = useState<NoticeProps>({\n    display: false\n  });\n\n  const handleSubmit = useCallback(\n    async (data: SignUpFormData) => {\n      try {\n        formRef.current?.setErrors({});\n\n        const schema = Yup.object().shape({\n          name: Yup.string().required(\"Informe seu nome completo\"),\n          email: Yup.string()\n            .email(\"Digite um e-mail válido\")\n            .required(\"Informe seu e-email\"),\n          password: Yup.string().min(6, \"Informe uma senha com pelo menos 6 digitos\"),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        setLoading(true);\n\n        api.post(\"/users\", data)\n          .then(response => {\n            setLoading(false);\n\n            setNotice({\n              display: true,\n              type: 'success',\n              message: 'Boas vindas ao Mark85, o seu gerenciador de tarefas.'\n            })\n          }).catch(error => {\n            const { message } = error.response.data\n\n            if (message === 'Duplicated email!') {\n              setNotice({\n                display: true,\n                type: 'error',\n                message: 'Oops! Já existe um cadastro com e-mail informado.'\n              })\n            }\n            \n            setLoading(false);\n          })\n \n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          setLoading(false);\n\n          const errors = getValidationErrors(err);\n\n          formRef.current?.setErrors(errors);\n\n          return;\n        }\n\n        setNotice({\n          display: true,\n          type: 'error',\n          message: 'Ocorreu um erro ao fazer cadastro, verifique seu dados.'\n        })\n      }\n    },\n    [],\n  );\n\n  return (\n    <Container>\n      <Background />\n\n      <Content>\n        <AnimationContainer>\n          <img src={logo} alt=\"Mark85\" />\n\n          <Form ref={formRef} onSubmit={handleSubmit}>\n            <h1>Faça seu cadastro</h1>\n\n            <Notice display={notice.display} message={notice.message} type={notice.type} />\n\n            <Input name=\"name\" icon={FiUser} type=\"text\" placeholder=\"Nome\" />\n            <Input\n              name=\"email\"\n              icon={FiMail}\n              type=\"text\"\n              placeholder=\"E-mail\"\n            />\n            <Input\n              name=\"password\"\n              icon={FiLock}\n              type=\"password\"\n              placeholder=\"Senha\"\n            />\n\n            <Button loading={loading} type=\"submit\">\n              Cadastrar\n            </Button>\n          </Form>\n\n          <Link to=\"/\">\n            <FiArrowLeft />\n            Voltar para login\n          </Link>\n        </AnimationContainer>\n      </Content>\n    </Container>\n  );\n};\n\nexport default SignUp;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div``;\n\nexport const Header = styled.header`\n  padding: 32px 0;\n  background: #202024;\n`;\n\nexport const HeaderContent = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n\n  display: flex;\n  align-items: center;\n\n  > img {\n    width: 200px;\n  }\n  \n  div {\n    display: flex;\n    align-items: center;\n    margin-left: auto;\n\n    gap: 10px;\n\n    small {\n      vertical-align: middle;\n      font-size: 0.8rem;\n      color: #ccc;\n    }\n\n    button {\n      border: 0;\n      background: transparent;\n\n      svg {\n        margin-top: -3px;\n        color: #803f42;\n        vertical-align: middle;  \n      }\n    }\n  }\n\n`;\n\nexport const Content = styled.main`\n  max-width: 800px;\n  margin: 10px auto;\n\n  display: flex;\n`;\n\nexport const TaskList = styled.div`\n  flex: 1;\n\n  p {\n    margin-top: 32px;\n    color: #404596;\n    font-weight: 500;\n\n    display: flex;\n    align-items: center;\n\n    span {\n      display: flex;\n      align-items: center;\n    }\n\n    span + span::before {\n      content: \"\";\n      width: 1px;\n      height: 12px;\n      background: #404596;\n      margin: 0 8px;\n    }\n  }\n`;\n\nexport const Section = styled.section`\n  margin-top: 28px;\n\n  .top {\n    display: flex;\n    align-items: center;\n\n    h1 {\n      margin-left: 8px;\n    }\n\n    a {\n      margin-left: auto;\n    }\n\n    button {\n      margin-top: 0px !important;\n    }\n\n  }\n\n  > strong {\n    color: #999591;\n    font-size: 20px;\n    line-height: 26px;\n    display: block;\n    border-bottom: 1px solid #3e3b47;\n    padding-bottom: 16px;\n    margin-bottom: 16px;\n  }\n\n  > p {\n    color: #999591;\n    font-weight: 400;\n  }\n`;\n\nexport const Task = styled.div`\nmargin-top: 16px;\n  display: flex;\n  align-items: center;\n\n  & + div {\n    margin-top: 16px;\n  }\n\n  div {\n    background: #202024;\n    padding: 16px 24px;\n    border-radius: 10px;\n\n    display: flex;\n    gap: 1rem;\n    align-items: center;\n    flex: 1;\n\n    .item-toggle,\n    .item-toggle-selected {\n      grid-area: toggle;\n      width: 32px;\n      height: 32px;\n      cursor: pointer;\n      border-radius: 999px;\n    }\n\n    .item-toggle {\n      border: 2px solid #6668eb;\n      background: none;\n    }\n    \n    .item-toggle-selected {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      color: #b6b7b9;\n      border: 3px solid #121214;;\n      background: #121214;\n    }\n\n    .task-todo,\n    .task-done {\n      margin-left: 24px;\n      color: #ccc;\n      font-size: 20px;\n    }\n\n    .task-done {\n      text-decoration-line: line-through;\n      color: #85888b;\n    }\n\n    .tags {\n      gap: 0.5rem;\n      padding: 0 !important;\n      span {\n        padding: 8px 15px 8px 15px;\n        border-radius: 8px;\n        background: #404596;\n        color: #ccc;\n      }\n    }\n\n    .task-remove {\n      grid-area: delete;\n      display: flex;\n      background-color: transparent;\n      border: 0;\n      color: #85888b;\n      cursor: pointer;\n      transition: color 0.2s;\n    }\n    \n    .task-remove:hover {\n      color: #e25858;\n    }\n  }\n`;","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FiPower, FiPlusCircle } from \"react-icons/fi\";\nimport \"react-day-picker/lib/style.css\";\n\nimport { Check, Trash } from \"phosphor-react\";\n\nimport api from \"../../services/api\";\n\nimport { useAuth } from \"../../hooks/auth\";\n\nimport logo from \"../../assets/logo.svg\";\n\nimport Button from \"../../components/Button\";\n\nimport {\n  Container,\n  Header,\n  HeaderContent,\n  Content,\n  TaskList,\n  Section,\n  Task,\n} from \"./styles\";\n\ninterface MonthAvailabilityItem {\n  day: number;\n  available: boolean;\n}\n\ninterface Tasks {\n  _id: string;\n  name: string;\n  is_done: boolean;\n  tags: [string];\n  user: string;\n}\n\nconst Tasks: React.FC = () => {\n  const { user, signOut } = useAuth();\n  const [loading, setLoading] = useState(false);\n  const [tasks, setTasks] = useState<Tasks[]>([]);\n\n  const getTasks = async () => {\n    api\n      .get<Tasks[]>(\"/tasks\")\n      .then(response => {\n        setTasks(response.data);\n      });\n  }\n\n  useEffect(() => {\n    getTasks()\n  }, []);\n\n  function handleSelectTask(task: Tasks) {\n    api\n      .put(`/tasks/${task._id}/${task.is_done ? 'todo' : 'done'}`)\n      .then(response => {\n        getTasks();\n      });\n  }\n\n  function handleDeleteTask(task_id: string) {\n    api\n      .delete(\"/tasks/\" + task_id)\n      .then(response => {\n        getTasks();\n      });\n  }\n\n  return (\n    <Container>\n      <Header>\n        <HeaderContent>\n          <img src={logo} alt=\"Mark85\" />\n         \n          <div>\n            <small>Olá, {user.name.split(' ')[0]}</small>\n            <button type=\"button\" className=\"signout\" onClick={signOut}>\n              <FiPower color=\"#803f42\" /> \n            </button>\n          </div>\n        </HeaderContent>\n      </Header>\n\n      <Content>\n        <TaskList> \n          <Section>\n\n            <div className=\"top\">\n\n              <h1>Minhas tarefas</h1>\n              \n              <Link to=\"/create\">\n                  <Button loading={loading} type=\"button\" onClick={()=> setLoading(true)}>\n                    <FiPlusCircle />\n                  </Button>\n              </Link>\n            </div>\n\n\n            {tasks.length === 0 && (\n              <p>Nenhuma tarefa cadastrada</p>\n            )}\n\n            {tasks.map(task => (\n              <Task key={task._id}>\n                <div className=\"task-item\">\n\n                  <button\n                    className={\n                      task.is_done ? 'item-toggle-selected' : 'item-toggle'\n                    }\n                    onClick={()=> handleSelectTask(task)}\n                  >\n                    {task.is_done ? <Check size={24}></Check> : null}\n                  </button>\n\n                  <strong className={task.is_done ? 'task-done' : 'task-todo'}>{task.name}</strong>\n\n                  <div className=\"tags\">\n                    {task.tags.map(tag => (\n                      <span key={tag}>\n                        {tag}\n                      </span>\n                    ))}\n                  </div>\n\n                  <button\n                      className='task-remove'\n                      onClick={()=> handleDeleteTask(task._id)}\n                    >\n                    <Trash size={24}></Trash>\n                  </button>\n\n                </div>\n              </Task>\n            ))}\n          </Section>\n\n        </TaskList>\n\n      </Content>\n    </Container>\n  );\n};\n\nexport default Tasks;\n","import styled from \"styled-components\";\nimport { shade } from \"polished\";\n\nexport const Container = styled.div`\n  > header {\n    height: 144px;\n    background: #202024;\n\n    display: flex;\n    align-items: center;\n\n    div {\n      width: 100%;\n      max-width: 1120px;\n      margin: 0 auto;\n\n      svg {\n        color: #999591;\n        width: 24px;\n        height: 24px;\n      }\n    }\n  }\n`;\n\nexport const Content = styled.div`\n  width: 100%;\n  margin: -176px auto 0;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  form {\n    margin: 80px 0;\n    width: 340px;\n\n    display: flex;\n    flex-direction: column;\n\n    h1 {\n      margin-bottom: 24px;\n      font-size: 20px;\n      text-align: center;\n    }\n\n    div:nth-child(5) {\n      margin-top: 24px;\n    }\n\n    .rti--container {\n      margin-top: 0.7rem !important;\n      --rti-bg: #202024 !important;\n      padding: 16px;\n      border: 2px solid #202024 !important;\n\n      --rti-border: #202024 !important;\n      --rti-main: #404596 !important;\n      --rti-radius: 10px !important;\n      --rti-s: 0.5rem !important; /* spacing */\n      --rti-tag: #404596 !important;\n      --rti-tag-remove: #e53e3e !important;\n\n      --rti-tag-padding: 0.5rem !important;\n\n      input {\n        background: #202024 !important;\n        color: #ccc;\n      }\n\n      .rti--tag {\n        color: #ccc !important;\n      }\n    }\n\n    .rti--container:focus-within {\n      border-color: var(--rti-main);\n      box-shadow: none;\n      border: 2px solid #404596 !important;\n    }\n\n    em {\n      margin-left: 5px;\n      margin-top: 0.5rem;\n      color: #666360;\n      font-size: 0.8rem;\n    }\n\n    .rti--tag button {\n      color: #ccc !important;\n    }\n\n    a {\n      color: #f4ede8;\n      margin-top: 24px;\n      transition: color 0.2s;\n\n      &:hover {\n        color: ${shade(0.2, \"#f4ede8\")};\n      }\n    }\n  }\n`;\n\nexport const AvatarInput = styled.div`\n  margin-bottom: 32px;\n  position: relative;\n  align-self: center;\n\n  img {\n    width: 186px;\n    height: 186px;\n    border-radius: 50%;\n  }\n\n  label {\n    position: absolute;\n    right: 0px;\n    bottom: 0px;\n    width: 48px;\n    height: 48px;\n    background: #404596;\n    border-radius: 50%;\n    border: 0;\n    cursor: pointer;\n    transition: background 0.2s;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    input {\n      display: none;\n    }\n\n    svg {\n      width: 20px;\n      height: 20px;\n      color: #312e28;\n    }\n\n    &:hover {\n      background: ${shade(0.2, \"#404596\")};\n    }\n  }\n`;\n","import React, { useCallback, useRef, useState } from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { FiArrowLeft } from \"react-icons/fi\";\nimport { Form } from \"@unform/web\";\nimport { FormHandles } from \"@unform/core\";\nimport { TagsInput } from \"react-tag-input-component\";\nimport * as Yup from \"yup\";\n\nimport api from \"../../services/api\";\n\nimport Notice, { NoticeProps } from '../../components/Notice';\n\nimport getValidationErrors from \"../../utils/getValidationErrors\";\n\nimport Input from \"../../components/Input\";\nimport Button from \"../../components/Button\";\n\nimport { Container, Content, AvatarInput } from \"./styles\";\n\nimport avatar from \"../../assets/avatar.svg\";\n\ninterface CreateFormData {\n  name: string;\n  email: string;\n  old_password: string;\n  password: string;\n  password_confirmation: string;\n}\n\nconst Create: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n\n  const [loading, setLoading] = useState(false);\n\n  const history = useHistory();\n\n  const [tags, setTag] = useState<any[]>([]);\n\n  const [notice, setNotice] = useState<NoticeProps>({\n    display: false\n  });\n\n  const handleSubmit = useCallback(\n    async (data: CreateFormData) => {\n      try {\n        formRef.current?.setErrors({});\n\n        const schema = Yup.object().shape({\n          name: Yup.string().required(\"Campo obrigatório\")\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        setLoading(true);\n\n        if (tags.length > 3) {\n\n          setLoading(false);\n\n          setNotice({\n            display: true,\n            type: 'error',\n            message: 'Oops! Limite de tags atingido.'\n          })\n        }\n\n        const {\n          name,\n        } = data;\n\n        const formData = {\n          name,\n          tags\n        };\n\n        api.post(\"/tasks\", formData)\n          .then(response => {\n\n            setLoading(false);\n\n            history.push(\"/tasks\");\n          }).catch(error => {\n            const { message } = error.response.data\n\n            if (message === 'Duplicated task!') {\n              setNotice({\n                display: true,\n                type: 'error',\n                message: 'Oops! Tarefa duplicada.'\n              })\n            }\n            \n            setLoading(false);\n          })\n\n      } catch (error) {\n        if (error instanceof Yup.ValidationError) {\n          setLoading(false);\n\n          const errors = getValidationErrors(error);\n\n          formRef.current?.setErrors(errors);\n\n          return;\n        }\n\n        setLoading(false);\n\n        setNotice({\n          display: true,\n          type: 'error',\n          message: 'Erro ao tentar cadastrar! Tente novamente.'\n        })\n      }\n    },\n    [history, tags],\n  );\n\n  return (\n    <Container>\n      <header>\n        <div>\n          <Link to=\"/tasks\">\n            <FiArrowLeft />\n          </Link>\n        </div>\n      </header>\n\n      <Content>\n        <Form\n          ref={formRef}\n          onSubmit={handleSubmit}\n        >\n          <AvatarInput>\n            <img\n              src={avatar}\n              alt='Nova tarefa'\n            />\n          </AvatarInput>\n\n          <h1>Cadastrar Tarefa</h1>\n\n          <Notice display={notice.display} message={notice.message} type={notice.type} />\n\n          <Input name=\"name\" type=\"text\" placeholder=\"Nome da tarefa\" />\n          \n          <TagsInput\n            value={tags}\n            onChange={setTag}\n            name=\"tags\"\n            placeHolder=\"Informe até 3 tags\"\n          />\n          <em>pressione enter para adicionar a tag</em>\n\n          <Button loading={loading} type=\"submit\">\n            Cadastrar\n          </Button>\n        </Form>\n      </Content>\n    </Container>\n  );\n};\n\nexport default Create;\n","import React from \"react\";\nimport { Switch } from \"react-router-dom\";\n\nimport Route from \"./Route\";\n\nimport SignIn from \"../pages/SignIn\";\nimport SignUp from \"../pages/SignUp\";\nimport Tasks from \"../pages/Tasks\";\nimport Create from \"../pages/Create\";\n\nconst Routes: React.FC = () => {\n  return (\n    <Switch>\n      <Route path=\"/\" exact component={SignIn} />\n      <Route path=\"/signup\" component={SignUp} />\n\n      <Route path=\"/tasks\" component={Tasks} isPrivate />\n      <Route path=\"/create\" component={Create} isPrivate />\n    </Switch>\n  );\n};\n\nexport default Routes;\n","import React from \"react\";\nimport { AuthProvider } from \"./auth\";\n\nconst AppProvider: React.FC = ({ children }) => {\n  return (\n    <AuthProvider>\n      {children}\n    </AuthProvider>\n  );\n};\n\nexport default AppProvider;\n","import React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport GlobalStyle from \"./styles/global\";\n\nimport Routes from \"./routes\";\n\nimport AppProvider from \"./hooks/index\";\n\nconst App: React.FC = () => {\n  return (\n    <BrowserRouter>\n      <AppProvider>\n        <Routes />\n      </AppProvider>\n\n      <GlobalStyle />\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}